'''
딕셔너리의 구성물들로 유사도 측정하여 랭킹하기 알고리즘 by 강민구
'''

from sklearn.feature_extraction import DictVectorizer
from sklearn.metrics.pairwise import cosine_similarity

# input
a_10={1:4, 6:4, 14:2, 16:4}
a_11={5:5, 6:4, 15:5}
a_12={3:1, 9:1}
a_13={5:1, 9:4, 15:3}
a_14={4:4, 9:2}
a_15={1:2, 7:4}
a_16={5:3, 6:4}
a_17={5:4, 7:5, 11:1}
a_18={2:4, 8:4}
a_19={4:4, 6:4, 13:4, 20:5}
a_20={4:1, 9:2, 15:5}
a_21={5:5, 10:2}
a_22={3:4, 9:5, 13:2, 19:5}
a_23={1:2, 7:5, 14:4, 18:5}
a_24={4:5, 7:3, 14:3}
a_25={2:2, 10:5, 11:3, 17:1}
a_26={1:5, 6:3}
a_27={4:3, 8:3, 13:4, 20:5}
a_28={5:1, 9:4}
a_29={2:1, 7:5}
a_30={5:3, 10:4}
a_31={4:4, 7:4, 13:5, 20:1}
a_32={2:4, 10:2, 12:5, 20:3}
a_33={1:3, 8:3, 11:1, 20:4}
a_34={5:5, 7:4, 13:1, 17:5}
a_35={5:5, 9:5, 15:3, 17:5}
a_36={1:5, 9:1, 15:4, 16:1}
a_37={5:4, 10:3}
a_38={3:1, 6:5, 12:5}
a_39={1:4, 9:3, 11:3, 18:3}
a_40={5:2, 10:4, 13:3}
a_41={1:4, 8:3, 15:5}
a_42={4:4, 9:1, 13:3}
a_43={5:5, 6:1, 14:4}
a_44={5:5, 7:3}
a_45={3:5, 7:4, 14:5, 20:4}
a_46={2:3, 9:2, 13:4, 20:1}
a_47={2:5, 9:1}
a_48={2:4, 10:3}
a_49={1:2, 7:1, 12:3}
a_50={3:1, 7:3, 12:3}
a_51={5:5, 9:4, 15:4, 16:4}
a_52={5:2, 8:5, 12:4, 18:1}
a_53={1:3, 7:4, 13:4}
a_54={2:2, 8:2}
a_55={1:3, 8:1}
a_56={1:4, 6:1, 11:4, 19:5}
a_57={3:1, 8:3, 12:3, 16:2}
a_58={1:2, 10:3}
a_59={4:5, 6:3}
a_60={2:2, 7:1}
a_61={3:5, 10:3, 12:5}
a_62={2:4, 10:5, 15:3}
a_63={1:2, 6:4}
a_64={4:3, 9:5, 15:5}
a_65={4:5, 8:4}
a_66={5:1, 8:2, 11:2}
a_67={1:4, 7:5, 11:1}
a_68={5:4, 8:3}
a_69={3:1, 7:5, 14:2}
a_70={3:3, 6:3}
a_71={2:2, 7:1, 11:4, 18:5}
a_72={5:1, 8:2}
a_73={2:3, 9:2, 11:2, 17:1}
a_74={2:5, 10:3, 12:2, 17:3}
a_75={1:3, 6:1, 15:1}
a_76={2:5, 8:5, 15:4, 20:3}
a_77={4:5, 10:5}
a_78={4:5, 10:1, 13:2, 18:4}
a_79={5:3, 8:3, 12:3, 17:1}
a_80={1:3, 9:5, 15:3}
a_81={1:3, 10:3, 13:4, 16:5}
a_82={2:3, 9:1, 11:4, 19:3}
a_83={5:1, 7:2, 13:3}
a_84={5:5, 10:4, 13:4}
a_85={1:2, 10:5, 12:5}
a_86={5:5, 8:1, 11:5}
a_87={3:2, 8:4, 12:2}
a_88={1:1, 7:2}
a_89={4:5, 6:5, 11:3, 19:1}
a_90={2:5, 7:3, 11:3}
a_91={1:3, 9:5}
a_92={5:1, 9:4}
a_93={3:4, 7:3}
a_94={3:1, 9:4}
a_95={3:4, 8:1, 13:4}
a_96={4:4, 10:4, 15:4}
a_97={3:5, 10:5, 15:3}
a_98={3:2, 6:5}
a_99={3:4, 6:4}


# a_10에서 a_13까지의 cosine sim 구하기 예시
dict_list = list()
dict_list.append(a_10)
dict_list.append(a_11)
dict_list.append(a_12)
dict_list.append(a_13)

v = DictVectorizer(sparse=False)
X = v.fit_transform(dict_list)

print('Vec')
print(X)
print('---')
answer = cosine_similarity(X, X)
print(answer)
print('---')
sim_scores = list(enumerate(answer[1]))  #a_11의 cos_sim 번호붙이며 긁어오기
sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)  # 코사인 유사성 순으로 정렬
sim_scores = sim_scores[1:6]  # 본인 제외 최대 상위 5개 슬라이스
print(sim_scores)
ranking = [i[0] for i in sim_scores]  # 우선 순위 발표!
print(ranking)
if len(ranking) < 5:
    ranking = [75, 34, 13, 0, 42]  # 기본 추천 플레이리스트 하드코딩
